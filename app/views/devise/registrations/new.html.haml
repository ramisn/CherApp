%input{ type: 'hidden', value: 'sign up page', id: 'currentPageInput' }
- title(t("meta.sign_up.title"))
.rebrand.full-width-container{ 'data-controller': 'registrations' }
  .container.is-family-secondary
    .panel.has-fixed-width.is-centered
      .columns.is-centered.is-multiline.is-marginless
        .column.is-11
          %h3= t('labels.sign_up')
        - if devise_mapping.omniauthable?
          .column.is-11
            .columns.is-vcentered.is-centered.has-border-bottom.is-marginless
              .column.is-4.has-text-right-desktop
                %span.is-bold= t('sign_in.connect_with')
              .column.is-7
                = render "devise/shared/links"
        .column.is-11{ "data-controller": "password"}
          = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { 'data-action': 'registrations#handleSubmit', 'data-target': 'registrations.form' }) do |f|
            = f.hidden_field :role, value: params.dig(:user, :role), id: 'newUserRoleInput'
            = f.hidden_field :professional_role, value: params.dig(:user, :professional_role), id: 'newUserProfessionalRoleInput'
            = f.hidden_field :accept_referral_agreement, value: params.dig(:user, :accept_referral_agreement), id: 'newUserProfessionalAcceptReferralAgreement'
            .field
              = f.label :email, class: "label"
              = f.email_field :email, autofocus: true, autocomplete: "off", placeholder: t("placeholders.email"), type: 'email', class: 'email input field', required: true, 'data-target': 'registrations.emailInput', value: resource.email.blank? ? params[:email] : resource.email
              %p.is-caption.is-danger{ 'data-target': 'registrations.emailErrorMessage' }
            .field
              = f.label :password, class: "label"
              .control.has-icons-right
                = f.password_field :password, autocomplete: "off", placeholder: t("placeholders.password"), type: 'password', class: 'password input field',"data-target": "password.password registrations.passwordInput", required: true
                %span.icon.is-right.is-clickable{ 'data-action': 'click->password#seePassword' }
                  = fa_icon('eye-slash')
              %p.is-caption.is-danger{ 'data-target': 'registrations.passwordErrorMessage' }
            .field
              = f.label :password_confirmation, class: "label"
              .control.has-icons-right
                = f.password_field :password_confirmation, autocomplete: "new-password", class: "input field password", placeholder: t("placeholders.password_confirmation"),"data-target": "password.passwordConfirmation registrations.passwordConfirmationInput", required: true
                %span.icon.is-right.is-clickable{ 'data-action': 'click->password#seePasswordConfirmation' }
                  = fa_icon('eye-slash')
              %p.is-caption.is-danger{ 'data-target': 'registrations.passwordConfirmationErrorMessage' }
            - if @referrer
              = hidden_field_tag 'referral_code', @referrer.referral_code
            .field
              = f.submit t("buttons.sign_up"), class: "button is-primary is-fullwidth is-marginless", id: "signUpButton"
              %span.is-caption
                = t('generic.by_sign_up')
                = link_to t('sell.terms_and_conditions'), "#{root_url}/docs/Terms_Of_Service.pdf", { target: '_blank', class: 'has-text-essential-blue'}
            = link_to t('labels.already_have_an_account'), user_session_path, class: 'is-caption is-blockz'
            = link_to t('labels.activate_account'), new_activation_path, class: 'is-caption is-block'
