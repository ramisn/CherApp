%section.section.contact.is-paddingless-mobile.has-height-unset#contactUs
  .container
    .columns.is-marginless
      .column.is-8-tablet.is-7-desktop.is-6-widescreen.is-5-fullhd.is-paddingless-mobile
        .box.is-borderless.p-t-lg.p-b-lg
          .columns.is-centered.is-marginless.is-multiline.is-vcentered{ 'data-controller': "recaptcha" }
            = form_for(:contact, url: contact_supports_path, html: { 'data-action': 'submit->recaptcha#handleSubmit' } ) do |f|
              .column-is-10
                %h3.is-size-3.has-text-centered.is-marginless
                  = t('landing_page.contact_us').capitalize
                .field.has-text-left.m-t-md
                  = f.label :name, t('generic.name'), class: 'label'
                  .control
                    = f.text_field :name, placeholder: t('placeholders.your_name_here'), class: 'input', required: true, minlength: 3, maxlength: 30, value: current_user&.full_name
                .field.has-text-left
                  = f.label :email, t('generic.email'), class: 'label'
                  .control
                    = f.text_field :email, type: 'email', placeholder: t('placeholders.your_email'), class: 'input', required: true, minlength: 10, maxlength: 50, value: current_user&.email
                .field.has-text-left{ 'data-controller': 'calls' }
                  = f.label :phone, t('labels.phone'), class: 'label'
                  .control
                    = f.text_field :phone, pattern: '[0-9]{10}', placeholder: t('placeholders.phone_number'), class: 'input', required: true, minlength: 10, maxlength: 10, value: current_user&.phone_number, 'data-target': 'calls.phoneNumber'
                .field.has-text-left
                  = f.label :city, t('generic.city'), class: 'label'
                  .control
                    = f.text_field :city, class: "input field is-marginless", placeholder: "#{t('placeholders.your_city')}",
                      'data-controller': 'google-auto-complete-input', 'data-target': 'google-auto-complete-input.searchInput city-map-selecter.searchInput', 
                      'data-action': 'keydown->city-map-selecter#setCity', 
                      'data-type': '(cities)',
                      type: 'text'
                    %p.help.is-danger{'data-target': 'city-map-selecter.errorMessage'}
                .field.has-text-left{ 'data-controller': 'calls' }
                  = f.label :state, t('labels.state'), class: 'label'
                  .control
                    = f.select :state, Contact::US_STATES.map{|s| s[0] }.sort, {:prompt=>"Your State"}, {class: "input", required: true}

                %div.g-recaptcha{ 'data-sitekey': '6LfyMKUZAAAAAOQXGCDS96E6PUUrKRQ8BT9kLtni', 'data-callback': 'captchaCallback' }
                .field.is-expanded.m-t-md
                  = f.submit t('buttons.submit'), class: 'button is-primary is-fullwidth'
            = render 'shared/contact_icons'      
            